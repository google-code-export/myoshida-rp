
h1. プラグインの開発環境を準備しよう

やっぱり、実際に稼動している Redmine でプラグインを作って試すのは危険なので、まずはプラグイン開発のための環境を準備しましょう。

私はプラグインを作るのは自分の PC で作って確認してから、実際の Redmine にインストールしています。そこで Windows 上の Redmine で説明をしていきたいと思います。
ただし、 Redmine を立ち上げる方法はすでにいろんなサイトで紹介されているので、その辺はさらっと流して、開発用の環境にポイントを絞って説明します。

開発用の Redmine のポイントは 2 つです。
# *development* モードで起動する
# サーバ には *Webrick* を使う

Rails では動作モードとして、 production モードと development モードが用意されています。実際に稼動する場合は production モードで動作させますが、開発に使う場合は development モードの方がちょっと便利です。
production モードでは動作を早くするため、一度読み込んだコードは覚えておいて、再度表示する場合はそれを使います。それに対して development モードの場合は、表示するたびに毎回読み込んでくれるので、変更を Redmine の再起動なしで確認することが出来ます。ただ、 *ちょっと* 便利と書いたのは後で詳しく説明しますが、全部即座に変更が適用されるわけではないので、意外と再起動は必要です。
ちなみに動作モードには test モードというのもあります。これはテストに使うものですが、今回プラグインのについては書いてないので、省略しています。 Rails ではテストも簡単にできるのらしいですが、私は使ったことがありません。

実際に運用する場合はサーバには Apache などを使うと思います。しかし、これらのサーバの場合、エラーが発生したとき、ページに *Internal Error* とでるだけですが、webrick を使っていると詳細なエラーページが出てきて、デバッグにかなり役に立ちます。
