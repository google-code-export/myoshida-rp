
h1. プラグインのスケルトン作成

前置きが長くなりましたが、いよいよプラグインの実装を行っていきましょう。


h2. プラグイン名前を決める

最初にプラグインの名前を決める必要があります。
サンプルなので何でもいいのですが、標準的なものということで *Standard* にしましょう。
今回のチュートリアルでは簡単なものですが、このサンプルに今後フィルタや wiki などの機能を付けてもっと標準的なものにしたいと考えています。それでこの標準サンプルを少し変更するだけでちょっとしたプラグインが作れるようにできたらいいなと思っています。


h2. スケルトン

Rails はフレームワークでその枠組みにあわせてアプリを作成する必要があります。 Rails ではこの枠組みにあったアプリを作りやすいようにのスケルトン(雛形)を生成する機能があります。生成したスケルトンの中身を書き込んで実装することによってフレームワークにあったものとなります。

Redmine でも同様にプラグイン用のスケルトンを生成する機能があります。


h2. スケルトン作成コマンドの実行

それでは実際にスケルトンを生成してみましょう。
Redmine のトップディレクトリに移動して、生成コマンドを実行します。
<pre>
$ ruby script/generate redmine_plugin プラグイン名
</pre>

プラグイン名を Standard にしたので、実際のコマンドは以下のようになります。
<pre>
$ ruby script/generate redmine_plugin Standard
</pre>

実行結果
<pre>
      create  vendor/plugins/redmine_standard/app/controllers
      create  vendor/plugins/redmine_standard/app/helpers
      create  vendor/plugins/redmine_standard/app/models
      create  vendor/plugins/redmine_standard/app/views
      create  vendor/plugins/redmine_standard/db/migrate
      create  vendor/plugins/redmine_standard/lib/tasks
      create  vendor/plugins/redmine_standard/assets/images
      create  vendor/plugins/redmine_standard/assets/javascripts
      create  vendor/plugins/redmine_standard/assets/stylesheets
      create  vendor/plugins/redmine_standard/lang
      create  vendor/plugins/redmine_standard/config/locales
      create  vendor/plugins/redmine_standard/test
      create  vendor/plugins/redmine_standard/README.rdoc
      create  vendor/plugins/redmine_standard/init.rb
      create  vendor/plugins/redmine_standard/lang/en.yml
      create  vendor/plugins/redmine_standard/config/locales/en.yml
      create  vendor/plugins/redmine_standard/test/test_helper.rb
</pre>

コマンドを実行すると @vender/plugins/redmine_standard@ 以下にスケルトンが生成されます。
Rails の概要のところでも説明しましたが、 @vender/plugins@ 以下の各ディレクトリがプラグインとして扱われます。ここにスケルトンが生成されたことになります。

あと プラグインの名称の先頭に redmine_ と付いてますが、これは必ずプラグイン名のの先頭に付くものです。命名規則として必須のものではないですが、わざわざ変えるのも面倒なのでそのままにしておきましょう。

ファイル名にする場合は Pascal ケースをスネークケースにするという決まりがありました。
そのため Standard と大文字で指定していたにもかかわらず、小文字に変換されています。もし StandardPlugin という名前にしていた場合には redmine_standard_plugin という名前になっています。また、プラグインの名前の指定で最初から standard_plugin というようにアンダーバー区切りで名前を指定してもかまいません。


h2. プラグインのディレクトリ構成

生成されたプラグインの構成をみていきましょう。
<pre>
init.rb
app/
├ controllers/
├ helpers/
├ models/
└ views/
lib/
db/migrate/
assets/
├ images
├ javascripts
└ stylesheets
lang/
config/locales
test/
README.rdoc
</pre>

*init.rb* はプラグインで一番最初にロードされるファイルです。ここにプラグインの基本情報を書いていきます。これは[[GuideInitRb|次章]]で説明します。

*app* にはプラグインの主な中身を記述することになります。 *controllers*, *views*, *models* のそれぞれがそのまま MVC 構造の対応する部分を格納するディレクトリです。helpers はライブラリのようによく使われる共通的な処理を格納する場所になります。helpers を除いた 3 つの部分がプラグインの主要な部分ですので、これから一つづつ説明していきます。

lib も共通処理のファイルを置くところです。プラグイン中で未定義のクラス(FooBar)を使うと、スネークケースに変更して(foo_bar.rb)、そのファイルをロードしますが、その検索場所がこの lib です。
lib も app/helpers も同じような用途のものを格納しますが、大きな違いは development モードでの動作が変わってきます。 development モードでは redmine の再起動なしで変更が反映されますが、それは app 以下のものだけです。 init.rb や lib 以下の変更は redmine の再起動が必要となります。
だったら、全部 app/helpers に書けば、ということになるかと思いますが、 helpers は app の他の部分からしか呼び出せないので、 init.rb から呼び出したいものは lib に書く必要があります(私がやり方を知らないだけかもしれませんが)。また、自分で作成したクラスなども lib に書きます。

*db/migrate/* はデータベースの操作する処理を記述します。ここは model とあわせて説明します。

assets/ にはそれぞれプラグイン独自に作成した 画像、 JavaScript, スタイルシート(CSS) をそれぞれ格納します。こちらの使用はちょっと応用的な内容ですので、 [[TipsOriginalImage|プラグイン Tips]] の説明を見てください。

*config/locales* は国際化のためにそれぞれの言語ごとのラベルやメッセージなどをおきます。こちらは [[GuideI18n|国際化]] のところで説明します。
Rails の国際化の方法は途中で変わりました。lang は前の国際化で利用されたもので、今は使う必要がないので、削除してかまいません(多分)。

test/ には、テストコードを記述します。 test も重要ですが、なくても作れるのでテストについては説明は書いてません。単に私がよく知らないので書けないというだけですが。

README.rdoc にはプラグインのインストール方法などの説明を書いておきます。よくオープンソースのアプリケーションには readme.txt のようなファイルがあると思いますが、そういったものになります。
特に規約としてファイル名や中身が決まっているものではないので、なんでもいいですし、なくてもかまいません(書いておくべきですが)。
rdoc というのは wiki のようなフォーマットで書く ruby のドキュメントで、これを元に html ファイルを生成できたりします。ただ、 gem のように rdoc にしていれば、プラグイン追加時に勝手に html を作ってくれたりといったことはしてくれないので、特に rdoc で書く必要はありません。私は最近 README.rwiki という名前で Redmine の wiki 形式で書いてサイトなどにすぐ貼り付けられるようにしています。

---

| [[プラグイン開発ガイド|^]] | [[GuideSampleSpec|<<]] | [[GuideInitRb|>>]] |
