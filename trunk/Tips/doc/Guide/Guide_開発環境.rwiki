h1. プラグインの開発環境の準備

やっぱり、実際に稼動している Redmine でプラグインを作って試すのは危険なので、まずはプラグイン開発のための環境を準備しましょう。

私はプラグインを作るのは自分の PC で作って確認してから、実際の Redmine にインストールしています。そこで Windows 上の Redmine で説明をしていきたいと思います。
ただし、 Redmine を立ち上げる方法はすでにいろんなサイトで紹介されているので、開発用の環境にポイントを絞って説明します。

通常の Redmine のインストール方法の説明は以下のサイトがお勧めです。

* http://redmine.jp/guide/RedmineInstall/
* http://www012.upp.so-net.ne.jp/tanuki-project/install_redmine.html



h2. 開発用 Redmine のポイント

開発用の Redmine のポイントは 2 つです。
# development モードで起動する
# サーバ には WEBrick を使う

Rails では動作モードとして、 *production* モードと *development* モードが用意されています。実際に稼動する場合は production モードで動作させますが、開発に使う場合は development モードの方がちょっと便利です。
production モードでは動作を早くするため、一度読み込んだコードは覚えておいて、再度表示する場合はそれを使います。それに対して development モードの場合は、表示するたびに毎回読み込んでくれるので、変更を Redmine の再起動なしで確認することが出来ます。ただ、 *ちょっと* 便利と書いたのは後で説明しますが、全部即座に変更が適用されるわけではないので、意外と再起動は必要です。
ちなみに動作モードには test モードというのもあります。これはテストに使うものですが、このプラグインガイドでは test については書いてないので、省略しています。 Rails ではテストも簡単にできるのらしいですが、私は使ったことがありません。

実際に運用する場合はサーバには Apache などを使うと思います。しかし、これらのサーバの場合、エラーが発生したとき、ページに *Internal Error* とでるだけですが、 *WEBrick* を使っていると *詳細なエラーページ* が出てきてデバッグにかなり役に立ちます。

!webrick_err.png!


h2. 使用ソフト

|_. Redmine      |        | http://rubyforge.org/frs/?group_id=1850 |
|_. Ruby         | Rumix  | http://ruby.morphball.net/rumix/        |
|_. データベース | SQLite | http://www.sqlite.org/download.html     |

まず、Redmine の最新版をダウロードします。作成したプラグイン公開するにはなるべく最新版で確認する方がいいでしょう。

Ruby には、 ruby と一緒にいろいろインストールしてくれる Rumix を使用します。
プラグイン開発ではコマンドラインで実行しなければならないことが多いので、特に nyacus というコマンドラインを実行のプログラムが役に立ちます。
ruby や gem を使ってインストールするものは "インストールページ":http://redmine.jp/guide/RedmineInstall/ で確認して Redmine のバージョンにあわせたものにして下さい。

データベースには SQLite を使いました。多分、 Redmine が対応するデータベースの中では Windows 上で一番簡単に動作させられると思います。


h2. データベース設定

Rails では 1 つの Rails プログラムが動作モードを切り替えた際、それぞれ独立して動作するようになっています。そのため、データベースもモードごとに別々に設定するようになっています。
データベース設定は config/database.example.yml をもとに config/database.yml を作成します。開発は development モードで起動するので、 このとき development 用の設定を書き直します。
<pre>
development:
  adapter: sqlite3
  dbfile: db/redmine.db
  timeout: 5000
</pre>


h2. データベースの作成

データベースの作成コマンドなども development 用にする必要があります。
Rails の起動モードの変更は RAILS_ENV という環境変数で行います。ただし、環境変数の設定されていないデフォルトの起動オードが development モードなので、 *"RAILS_ENV=production"* といった環境変数の設定を省略するだけです。
<pre>
 $ rake db:migrate 
</pre>


h2. サーバの起動

WEBrick で Redmine を起動します。
こちらも *"-e production"* の環境変数の設定を省略します。
<pre>
 $ ruby script/server
</pre>

起動後 <notextile>http://127.0.0.1:3000</notextile> にアクセスしてください。
Windows だと <notextile>http://localhost:3000/</notextile> だとアクセスできないことがあります。


上手くアクセスできたら、開発環境の準備は完了です。これで自分の PC で Redmine が動くようになりました。
ただし、 development モードでかつ WEBrick を使っているとなるとかなり遅いですが、そこは我慢しましょう。

----

| [[プラグイン開発ガイド|^]] | [[Guide_開発環境|<<]] | [[Guide_サンプル仕様|>>]] |




